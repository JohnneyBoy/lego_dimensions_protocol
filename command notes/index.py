# Endpoint uses:
# 01 - LED control from console (Main priority for documentation)
# 81 - Probably NFC data transmission to console (Nice to know, but less useful)


# All known commands for endpoint 01:
# Packets to this endpoint seem to always start with 0x55
# EP byte1 byte2 - description
# 01 0x04 0xd2 - Unknown, no changes to pads
# 01 0x06 0xc0 - Immediately switch pad(s) to a single value
# 01 0x08 0xc2 - Immediately change the colour of one or all pad(s), fade and flash available
# 01 0x09 0xc3 - set 1 or all pad(s) to a colour with variable flash rates
# 01 0x0a 0xb1 - Unknown, no changes to pads
# 01 0x0a 0xb3 - Unknown, no changes to pads
# 01 0x0a 0xd4 - Unknown, no changes to pads
# 01 0x0e 0xc8 - Immediately switch pad(s) to set of colours
# 01 0x0f 0xb0 - Startup?
# 01 0x14 0xc6 - Fade pad(s) to value(s)
# 01 0x17 0xc7 - Flash all 3 pads with individual colours and rates, either change to new or return to old based on pulse count




# All known commands for endpoint 81:
# Unconfirmed that these are actually commands.
# Packets containing NFC data seem to begin with 0x56
# May only be one byte to differentiate these?
# If byte 1 of a packet ox 0x0b, byte 2 is data instead of a command indicator.
# EP byte1 
# 0x0b - Tag added/removed to a pad, gives UID



# Command Lengths (Counting everything except padding):
# Assumption of fixed-length commands seems to hold

# EP 01:
# Length of command appears to correlate to value of byte 1
# 0x0e - len() == 17
len([0x55, 0x0e, 0xc8, 0x06, 0x01, 0xff, 0x6e, 0x00, 0x01, 0x00, 0x6e, 0x18, 0x01, 0xff, 0x00, 0x18, 0x3e,])
# 0x0a - len() == 13
len([0x55, 0x0a, 0xb1, 0x03, 0x44, 0x40, 0x80, 0xa8, 0x86, 0x94, 0xbd, 0x7d, 0x13,])
# 0x17 - len() == 26
len([0x55, 0x17, 0xc7, 0x27, 0x01, 0x02, 0x02, 0x0c, 0x33, 0x00, 0x00, 0x01, 0x02, 0x02, 0x0c, 0x00, 0x00, 0x04, 0x01, 0x02, 0x02, 0x0c, 0x00, 0x16, 0x00, 0xda,])
# 0x14 - len() == 23
len([0x55, 0x14, 0xc6, 0x05, 0x01, 0x0f, 0x01, 0x99, 0x42, 0x0e, 0x01, 0x0f, 0x01, 0x99, 0x42, 0x0e, 0x01, 0x0f, 0x01, 0x99, 0x42, 0x0e, 0x22,])
# 0x09 - len() == 12
len([0x55, 0x09, 0xc3, 0x2c, 0x03, 0x02, 0x02, 0x07, 0x30, 0x00, 0x04, 0x8f,])
# 0x08 - len() == 11
len([0x55, 0x08, 0xc2, 0x35, 0x01, 0x03, 0x01, 0xf0, 0x00, 0x16, 0x5f,])
# 0x06 - len() == 9
len([0x55, 0x06, 0xc0, 0x02, 0x00, 0xff, 0xff, 0xff, 0x1a,])
# 0x04 - len() == 7
len([0x55, 0x04, 0xd2, 0x2c, 0x00, 0x26, 0x7d,])

# EP 81:
# Length of command appears to correlate to value of byte 1
# All known traffic for EP 81 appears to have a payload length in byte 1
# 0x01 - len() ==  4
# 0x01 == 1
len([0x55, 0x01, 0x29, 0x7f,])
# 0x09 - len() == 12
# 0x09 == 9
len([0x55, 0x09, 0x03, 0xbd, 0x00, 0x1f, 0xe9, 0x0e, 0x47, 0xb1, 0xf0, 0x1c,])
# 0x0a - len() ==  13
# 0x0a == 10
len([0x55, 0x0a, 0x31, 0x00, 0xa2, 0x77, 0xac, 0x78, 0x70, 0x5a, 0x0f, 0xd8, 0x7e,])
# 0x0b - len() ==  14
# 0x0b == 11
len([0x56, 0x0b, 0x02, 0x00, 0x02, 0x00, 0x04, 0x88, 0xaa, 0x9a, 0x08, 0x40, 0x81, 0xfe,])
# 0x12 - len() ==  21
# 0x12 == 18
len([0x55, 0x12, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0c, 0x3f, 0xbd, 0x04, 0x00, 0x00, 0x1e, 0x1d,])
# 0x19 - len() == 28 
# 0x19 == 25
len([0x55, 0x19, 0x01, 0x00, 0x2f, 0x02, 0x01, 0x02, 0x02, 0x04, 0x02, 0xf5, 0x00, 0x19, 0x8b, 0x54, 0x4d, 0xb4, 0xcd, 0xae, 0x45, 0x24, 0x80, 0x0e, 0x00, 0xf0, 0x25, 0x20,])




# General format for EP 81
# 00 - magic number
# 01 - Payload size
# Payload
# Checksum
# Padding to 32 bytes


# General format for EP 01
# Byte - Use
# 00 - Magic number
# 01 - Payload size
# 02 - Command
# 03 - Message counter
# Payload
# Checksum
# Padding to 32 bytes